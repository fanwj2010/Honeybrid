#********************************************************************************#
#*			HONEYBRID CONFIGURATION FILE				*#
#********************************************************************************#

# The configuration of honeybrid is divided into three sections:
# - main:   where the main parameters of honeybrid are defined
# - module: where individual modules to process packets are defined and given a name
# - target: where individual targets are defined, to link modules with a traffic filter
#           expression
# It is important to have modules defined before targets!

## main configuration:
# Where the parameters of honeybrid are defined
config {
	## output mode
	# 1 = syslog
	# 2 = stdout (do not daemonize)
	# 3 = log files
        output = 3;

	## pid directory
        exec_directory = /var/run/;

	## log file directory
        log_directory = /var/log/honeybrid/;

	## enable automatic hourly log rotation (applies only for connection logs, not for debug logs)
        log_rotation = 0;

	## connection log file (log_directory defines the path)
        log_file = honeybrid.log;

	## debug log file (detailed internal process, log_directory defines the path)
        debug_file = honeybrid.debug;

	## Number of seconds after which network sessions are expired
        expiration_delay = 120;

	## 'yes' to send reset to external host when there is an issue, 'no' to remain silent
        reset_ext = yes;
}


## module configuration:
# modules are defined to tell honeybrid how to control traffic between external hosts and honeypots
# Each section 'module' requires a name (between quotes) and a parameter 'function' that defines 
# the type of module that will be used to process packets.
# There are currently six possible module functions:
#  hash, source, random, yesno, control, counter
# - random  is a module to randomly accept packets. A probability is given as argument, for example mod_random(0.1) would accept 10% of processed packets.
# - yesno   is a module to always accept or always reject packets.
# - counter is a module to accept packets after a given number of packets received. 
#           For example mod_counter(3) would return 'accept' if the processed 
#           connections is made of at least 3 packets.
# - source  is a module to accept packets only from new IP addresses. A given IP 
#           address that tries to connect multiple times to the honeynet would be 
#           rejected after the second attempt.
# - hash    is a module to accept packets that carry new original payload, which means 
#           payloads that have never been inspected before. This module works by computing
#            a hash value for every payload inspected and keeping a database of known payload.
# - control is a module to rate limit network packets based on source IP address. Packets 
#           are rejected after a source IP sent more than a given number of packets in a given 
#           period of time.
# Other parameters are required depending on the type of function used. They are all defined in 
# the examples below:

module "random" {
	function = random;
	# The module random needs a single parameter 'value'. 
	# A value of 10 means that 1 out of 10 packets will be randomly accepted
	value = 10;
}

module "hash" {
        function = hash;
	# The module hash needs a single parameter 'backup', 
	# to know where it should save the database of payload hashes
        backup = /etc/honeybrid/hash.db;
}

module "counter" {
        function = counter;
	# The module counter needs a single parameter 'counter', 
	# that defines after how many packets should it returns 'accept'
        counter = 2;
}

module "control" {
        function = control;
	# The module control needs 3 parameters:
	# 'backup' to define where the database of controlled IP addresses should be saved
        backup = /etc/honeybrid/control.db;
	# 'expiration' to know after how many seconds should IP be removed from the database
        expiration = 600;
	# 'max_packet', to give the maximum number of accepted packets sent during 'expiration' before	
	# rejecting packets.
        max_packet = 1000;
}

module "source" {
        function = source;
	# The module source needs 2 parameters:
	# 'backup' to define where the database of know IP addresses should be saved
        backup = /etc/honeybrid/source.db;
	# 'expiration' to know after how many seconds should IP be removed from the database
	expiration = 600;
}


# Each section 'target' requires 4 parameters:
#  'filter'   (mandatory) to define the type of traffic covered by this target (using the tcpdump syntax)
#  'frontend' (mandatory) to define a rule to accept traffic (using a boolean equation of modules)
#  'backend'  (optional)  to define a rule to redirect traffic (using a boolean equation of modules)
#  'limit'    (optional)  to define a rule to control outgoing traffic iniated by honeypots (using a boolean equation of modules)
# The frontend and backend parameters also requires the IP address of the honeypot in charge of the frontend or backend respectively.
# The tcpdump filter and the boolean equations require quotes.

target {
        filter "dst host 192.168.0.10 and port 80";
        frontend 192.168.0.10 "source or random";
        backend 192.168.0.11 "hash";
        limit "control";
}
